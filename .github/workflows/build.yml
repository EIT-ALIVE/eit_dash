name: Python package

on:
  push:
    paths-ignore:
      - "**.md"
      - "**.rst"
      - "**.ipynb"
      - "**.cff"
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths-ignore:
      - "**.md"
      - "**.rst"
      - "**.ipynb"
      - "**.cff"
    branches:
      - main
  workflow_call: # allows for remote triggering of action
    inputs:
      caller_branch:
        required: true
        type: string

jobs:
  build:
    if: github.event.pull_request.draft == false
    name: Build for (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.10"]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          repository: EIT-ALIVE/eit_dash # needs to be made explicit for the remote trigger
      - name: Connect to Container Registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: wbaccinelli
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Run Tests in Container
        run: >
          echo "action triggered by: ${{github.event_name}}";
          docker run
          --rm
          -v $GITHUB_WORKSPACE:/ci
          -e TEST_DATA=/eitprocessing
          ghcr.io/eit-alive/eittestdata:latest
          sh -c 'set -xe ;
            cd /ci ;
            python${{ matrix.python-version }} -m pip install --upgrade pip poetry ;
            echo "--- conditionally install remote branch of eitprocessing"
            if [ -n "${{ inputs.caller_branch }}" ]; then
              poetry add git+https://github.com/EIT-ALIVE/eitprocessing.git#${{ inputs.caller_branch }} ;
            fi
            poetry install --with test ;
            poetry run pytest -v tests/unit_tests ;
            python${{ matrix.python-version }} -m build'
